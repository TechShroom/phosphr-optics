buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
        }
    }
    dependencies {
        classpath group: 'com.techshroom', name: 'Aversion', version: '3.0.1'
    }
}
plugins {
    id "com.google.protobuf" version "0.8.3"
    id "com.github.hierynomus.license" version "0.14.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'aversion-util'
apply plugin: 'aversion-apt'
apply plugin: 'aversion-maven'

license {
    ext {
        name = rootProject.name
        organization = rootProject.organization
        url = rootProject.url
    }
    header = rootProject.file('HEADER.txt')
    ignoreFailures = false
    strictCheck = true
    include '**/*.java'
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

util {
    javaVersion = '1.8'
}

mavencfg {
    coords 'TechShroom', 'phosphr-optics'
    description 'QR-Code based transmission protocol.'
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}
configurations.all {
   resolutionStrategy {
     // fail eagerly on version conflict (includes transitive dependencies)
     // e.g. multiple different versions of the same dependency (group and name are equal)
     failOnVersionConflict()

     // force certain versions of dependencies (including transitive)
    force 'com.google.guava:guava:23.0', 'com.google.code.findbugs:jsr305:3.0.1',
            'org.bytedeco.javacpp-presets:opencv-platform:3.2.0-1.3',
            'org.bytedeco:javacpp:1.3.3', 'org.bytedeco.javacpp-presets:opencv:3.2.0-1.3'

     cacheDynamicVersionsFor 10, 'minutes'
     // don't cache changing modules at all
     cacheChangingModulesFor 0, 'seconds'
   }
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    compile group: 'com.techshroom', name: 'jsr305-plus', version: '0.0.1'

    compile group: 'org.bytedeco', name: 'javacv-platform', version: '1.3.3'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: rootProject.protobufVersion
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: rootProject.protobufVersion

	compile group: 'com.google.zxing', name: 'core', version: rootProject.zxingVersion

    addAPTReqWComp group: 'com.google.guava', name: 'guava', version: '23.0'
    addAPT group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc3'
    addAPT group: 'com.google.auto.value', name: 'auto-value', version: '1.5.2'
    addAPTReq name: 'aopalliance'
    addAPTReq name: 'asm'
    addAPTReq name: 'auto-value'
    addAPTReq name: 'auto-common'
    addAPTReq name: 'cglib'
    addAPTReq name: 'commons-collections'
    addAPTReq name: 'commons-lang'
    addAPTReq name: 'dagger'
    addAPTReq name: 'javawriter'
    addAPTReq name: 'javax.inject'
    addAPTReq name: 'velocity'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-processing', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
    options.incremental = true
    options.fork = true
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:' + rootProject.protobufVersion
    }
}
// hack in generate files for eclipse
eclipse.classpath.file {
    withXml {
        def node = it.asNode()
        def attrNode = node.appendNode('classpathentry', ['kind': 'src', 'path': 'build/generated/source/proto/main/java'])
            .appendNode('attributes');
        attrNode.appendNode('attribute', ['name': 'ignore_optional_problems', 'value': 'true']);
        attrNode.appendNode('attribute', ['name': 'optional', 'value': 'true']);
    }
}
// hack in generate files for idea
apply plugin: 'idea'
idea.module.generatedSourceDirs += file('build/generated/source/proto/main/java')
